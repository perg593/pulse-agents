// OVERVIEW ----------------------------------------------------------------------------------------
//
// LOOK-AND-FEEL VARIABLES are defined:
//
//		$bg-color-submit-button: 	red
// 		$bg-color-close-button: 	blue
//
//
// Using PROPERTY-SPECIFIC MAPS ($widths, $borders, $background-colors, etc.), 
// each LOOK-AND-FEEL VARIABLE is associated with a $selector variable:
//
// 		$background-colors (
// 			submit-button: 	$bg-color-submit-button,
// 			close-button:  	$bg-color-close-button
// 		)
//
//
// The BUILDER MIXIN compiles the css using nested maps 
// and the $selector value that is passed by the main CSS file:
//
// In a CSS-PROPERTIES-AND-VALUES MAP, each css property is associated with a PROPERTY-SPECIFIC MAP:
//
// 		$css-properties-and-values: (
// 			width: 						$widths,
// 			border: 					$borders,
// 			background-color: $background-colors,
// 		)
//	
// CSS is compiled if the MAP contains a line for the passed $selector, 
//
// 		#{$css-property}: map-get($css-value, #{$selector});
//
// -------------------------------------------------------------------------------------------------




// LOOK-AND-FEEL VARIABLES -----------------------------------------------------------
// In almost every case, these should be the only values we change to generate a theme

		$widget-fullscreen-width: 	22%;
		$widget-fullscreen-height: 	22%;
		$submit-button-width:				22%;




// PROPERTY-SPECIFIC MAPS -----------------------------------------
// Only relevant values are should be defined
// No need to have a $radio-button line in the $font-sizes MAP 
// There should be NO HARDCODED VALUES here!

		$widths: (
			submit-button:				$submit-button-width,
		);

		$heights: (
			widget-fullscreen: 		$widget-fullscreen-height,
			invitation-button:		auto,	// HARDCODED? BAD! SAD!
		);

		// To append new values to a map (in a different file, maybe),
		// use the map-merge SASS function:

		$widths2: (
			widget-fullscreen: 		$widget-fullscreen-width,
		);

		$widths: map-merge($widths, $widths2);







// MIXIN ---------------------------------------------------------------------------------------

		$css-properties-and-values: (
			width:					$widths,
			height:					$heights,
		);

		@mixin builder($selector) {
			@each $css-property, $css-property-map in $css-properties-and-values {
				#{$css-property}: map-get($css-property-map, #{$selector});
			} 
		}





// SELECTORS ---------------------------------------------------------------------------------------
// Shortcuts so we don't have to write long strings

		$widget-fullsc: 			'#_pi_surveyWidget[survey-widget-type="fullscreensurvey"]';
		$widget-fullsc-mobi: 	'#_pi_surveyWidget[survey-widget-type="fullscreensurvey"].mobile-enabled';





// MAIN CSS FILE ------------------------------------------------ 

		#{$widget-fullsc},
		#{$widget-fullsc-mobi} { @include builder("widget-fullscreen"); }

		.submit-button { @include builder("submit-button"); }





// THE COMPILED CSS ------------------------------------------------------------
//
// 		#_pi_surveyWidget[survey-widget-type="fullscreensurvey"],
// 		#_pi_surveyWidget[survey-widget-type="fullscreensurvey"].mobile-enabled {
// 			width: 22%;
// 			height: 22%;
// 		}

// 		.submit-button {
// 			width: 22%;
// 		}



