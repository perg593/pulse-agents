:ruby
  survey ||= nil
  questions_fields ||= nil

.options
  %a{:href => '#', :class => 'options-link'}
    .arrow &#9658;
    Options
  .options-content
    .options-group.answers-options
      .hidden-answer-button-type
        = questions_fields.input :button_type, id: 'button-type', as: :hidden
      .answer-button-type
        %label Button Style
        ._pi_radio_button_outer
          ._pi_radio_button_inner
        %label Radio Button
        ._pi_standard_button_outer= 'Standard Button'
        %label._pi_menu Menu

      %label.desktop-answer-options-label{ class: ('hidden' if questions_fields.object.button_type.nil?) } Desktop
      .desktop-answer-width-type
        = questions_fields.input_field :desktop_width_type, as: :select, collection: Question::WIDTH_TYPE_OPTIONS, id: 'desktop-width-type-select',
        prompt: 'Width Type'
      .answer-per-row-desktop
        = questions_fields.input_field :answers_per_row_desktop, numeric: true, id: 'input_answers_per_row_desktop'
        %label Per Rows
      .answer-alignment-type-desktop
        = questions_fields.input_field :answers_alignment_desktop, as: :select, collection: Question.answers_alignment_for_select,
        id: 'answers-alignment-desktop-select', include_blank: false

        - Question.answers_alignment_desktops.keys.each do |alignment|
          .alignment-type{ class: "fixed-#{alignment.dasherize}-alignment-type " + (alignment_is?(question: questions_fields.object, device_type: 'desktop', width_type: 'fixed', alignment: alignment) ? 'active' : 'hidden') }
            = image_tag "questions/fixed-#{alignment.dasherize}.png"
            .alignment-hint= alignment_description(alignment)
          .alignment-type{ class: "variable-#{alignment.dasherize}-alignment-type " + (alignment_is?(question: questions_fields.object, device_type: 'desktop', width_type: 'variable', alignment: alignment) ? 'active' : 'hidden') }
            = image_tag "questions/variable-#{alignment.dasherize}.png"
            .alignment-hint= alignment_description(alignment)

      %label.mobile-answer-options-label{ class: ('hidden' if questions_fields.object.button_type.nil?) } Mobile
      .mobile-answer-width-type
        = questions_fields.input_field :mobile_width_type, as: :select, collection: Question::WIDTH_TYPE_OPTIONS, id: 'mobile-width-type-select',
        prompt: 'Width Type'
      .answer-per-row-mobile
        = questions_fields.input_field :answers_per_row_mobile, numeric: true, id: 'input_answers_per_row_mobile'
        %label Per Rows
      .answer-alignment-type-mobile
        = questions_fields.input_field :answers_alignment_mobile, as: :select, collection: Question.answers_alignment_for_select,
        id: 'answers-alignment-mobile-select', include_blank: false

        - Question.answers_alignment_mobiles.keys.each do |alignment|
          .alignment-type{ class: "fixed-#{alignment.dasherize}-alignment-type " + (alignment_is?(question: questions_fields.object, device_type: 'mobile', width_type: 'fixed', alignment: alignment) ? 'active' : 'hidden') }
            = image_tag "questions/fixed-#{alignment.dasherize}.png"
            .alignment-hint= alignment_description(alignment)
          .alignment-type{ class: "variable-#{alignment.dasherize}-alignment-type " + (alignment_is?(question: questions_fields.object, device_type: 'mobile', width_type: 'variable', alignment: alignment) ? 'active' : 'hidden') }
            = image_tag "questions/variable-#{alignment.dasherize}.png"
            .alignment-hint= alignment_description(alignment)

      .single-choice-default-label
        %label Default Label
        = questions_fields.text_field :single_choice_default_label, placeholder: 'Select an option', class: 'single-choice-default-label'

      - if survey.display_all_questions
        .optional-question
          = questions_fields.input_field :optional, as: :boolean, inline_label: 'Optional', checked: questions_fields.object.optional.present?, id: 'optional-checkbox'

      .additional-text{ class: ('hidden' unless questions_fields.object.button_type == 'standard') }
        .subtitle Additional Text
        .form-group
          %label Before Question
          .controls
            = questions_fields.input_field :before_question_text
        .form-group
          %label After Question
          .controls
            = questions_fields.input_field :after_question_text
        .form-group
          %label Before Answers
          .controls
            = questions_fields.input_field :before_answers_count, as: :integer, numeric: true, id: 'before_answers_count_input', min: 0, max: 11,
            value: (questions_fields.object.before_answers_count || 0)

            = questions_fields.input_field :before_answers_items, multiple: true, value: '', id: 'before_answers_item', class: 'hidden', disabled: true

            - (questions_fields.object.before_answers_items || []).each do |item|
              = questions_fields.input_field :before_answers_items, multiple: true, value: item, id: 'before_answers_item',
              style: "width: calc((100% / #{questions_fields.object.before_answers_items.count}) - (65px / #{questions_fields.object.before_answers_items.count}) - 10px"

        .icon-answers{ class: ('hidden' unless questions_fields.object.before_answers_items&.any? || questions_fields.object.before_answers_items&.any?) }
          = image_tag 'questions/icon-answers.png'

        .form-group
          %label After Answers
          .controls
            = questions_fields.input_field :after_answers_count, as: :integer, numeric: true,  id: 'after_answers_count_input', min: 0, max: 11,
            value: (questions_fields.object.after_answers_count || 0)

            = questions_fields.input_field :after_answers_items, multiple: true, value: '', id: 'after_answers_item', class: 'hidden', disabled: true

            - (questions_fields.object.after_answers_items || []).each do |item|
              = questions_fields.input_field :after_answers_items, multiple: true, value: item, id: 'after_answers_item',
              style: "width: calc((100% / #{questions_fields.object.after_answers_items.count}) - (65px / #{questions_fields.object.after_answers_items.count}) - 10px"
