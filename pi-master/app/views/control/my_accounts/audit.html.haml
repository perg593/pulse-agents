%h1 Activity Log

%h2 Account changes:
- @account.audits.creates.each do |audit|
  = render "application/audit", audit: audit, filter_fields: ["name", "identifier"]

- @account.audits.updates.each do |audit|
  - filter_fields = [ "oncomplete_callback_enabled", "oncomplete_callback_code", "onanswer_callback_enabled", "onanswer_callback_code", "custom_data_enabled", "custom_data_snippet" ]
  = render "application/audit", audit: audit, filter_fields: filter_fields

%h2 User changes:
%ul
  - @account.associated_audits.where(auditable_type: 'User').descending.each do |audit|
    :ruby
      unless audited_user_name = audit.auditable&.name
        destruction_audit = CustomAudit.destroys.find_by(auditable_type: 'User', auditable_id: audit.auditable_id)
        audited_user_name = "#{ destruction_audit.audited_changes["first_name"] } #{ destruction_audit.audited_changes["last_name"] }"
      end

    - if audit.action == 'update' && audit.audited_changes["failed_attempts"].try(:last).to_i > 0
      %li #{ print_username(audit) } failed to log in

    - if audit.audited_changes["last_sign_in_at"]
      - last_sign_in_at = Array.wrap(audit.audited_changes["last_sign_in_at"]).last.to_datetime.strftime("%B/%d/%Y at %H:%M(%z)")

      %li #{ print_username(audit) } signed in on #{last_sign_in_at}

    - if audit.action == 'update' && audit.audited_changes.include?("encrypted_password")
      %li #{ audited_user_name } changed their password

    - if audit.action == 'update' && audit.audited_changes.include?("level")
      - level_enum = get_enum(audit, 'level')
      - old_level, new_level = audit.audited_changes['level'].map {|level| level_enum[level]}
      %li #{ print_username(audit) } changed #{ audited_user_name }'s level from <i>#{ old_level }</i> to <i>#{ new_level }</i>

    - if audit.action == 'destroy'
      %li #{ print_username(audit) } destroyed the user: <i>#{ audited_user_name }</i>
    - elsif audit.action == 'create'
      %li Created user #{ audited_user_name }

  - @account.associated_audits.where(auditable_type: 'Invitation').each do |audit|
    = render "application/audit", audit: audit, filter_fields: ["email"]

%h2 Survey changes:
- @account.associated_audits.updates.where(auditable_type: 'Survey').each do |audit|
  = render "application/audit", audit: audit, filter_fields: ["status", "name"]

- @account.associated_audits.creates.where(auditable_type: 'Survey').each do |audit|
  = render "application/audit", audit: audit, filter_fields: ["name" ]

- @account.associated_audits.destroys.where(auditable_type: 'Survey').each do |audit|
  = render "application/audit", audit: audit
